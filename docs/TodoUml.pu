@startuml TodoUml01

package todos {


class Todo {
    - _id : string
    - _todo: string
    - _todoClassId: string
    - _tags: Tag[]
    - _childTodos: Todo[]
    - _expiryDate: Date
    - _createDate: Date
    - _updateDate: Date
    - _isClose: boolean
    + constractor(Todo: string): Todo
    + constractor(Todo: string, todoClass: string): Todo
    + constractor(Todo: string, todoClass: string, tag: string): Todo
    + constractor(Todo: string, todoClass: string, tag: string, expiryDate: DateTime): Todo
    + addTag(id: string, tag: sring): Todo
    + deleteTag(id: string, tag: string): Todo
    + addChildTodo(id: string, childTodoId: string): Todo
    + deleteChildTodo(id: string, childTodoId: string): Todo
    + update(id: string, Todo: string, todoClass: string, expiryDate: DateTime): Todo
    + close(id: string): Todo
    + unclose(id: string): Todo
    + delete(id: string): boolean
    + import(todoObj: Todo): void
}

interface iTodo {
    + addTag(id: string, tag: sring): Todo
    + deleteTag(id: string, tag: string): Todo
    + addChildTodo(id: string, childTodoId: string): Todo
    + deleteChildTodo(id: string, childTodoId: string): Todo
    + update(id: string, Todo: string, class: string, expiryDate: DateTime): Todo
    + close(id: string): Todo
    + unclose(id: string): Todo
    + delete(id: string): boolean
    + import(todoObj: Todo): void
}

class TodoList {
    - _id: string
    - _name: string
    - _todos: Todo[]
    + constractor()
    + constractor(name?: string)
    + add(todo: Todo): Todo
    + get(queriid: string): Todo
    + update(queryid: string, todo: string): Todo
    + delete(queryid: string): boolean
    - findTodo(queriid: string): Todo
}

class TodoClass {
    - _id: string
    - _name: string
    - _createDate: Date
    - _updateDate: Date
    + constractor(class: string): TodoClass
    + update(id: string, class: string): TodoClass
    + delete(id: string): boolean
}

interface iTodoClass {
    + update(id: string, class: string): TodoClass
    + delete(id: string): boolean
}

class TodoClassList {
    - _id: string
    _ _name: string
    + constractor()
    + constractor(name?: string)
    + add(todoClass: TodoClass): TodoClass
    + get(queryid: string): TodoClass
    + update(queryid: string, name: string): TodoClass
    + delete(queryid: string): boolean
}

class Tag {
    - _id: string
    - _tag: string
    - _createDate: Date
    - _updateDate: Date
    + constrator(tag: string): Tag
    + update(id: string, tag: string) Tag
    + delete(id): boolean
}

interface iTag {
    + update(id: string, tag: string) Tag
    + delete(id: string): boolean 
}

}

iTodo --* TodoList
iTodoClass --* TodoClassList
Todo --le-- TodoClass
Tag --le--o Todo
iTodo <|.. Todo
iTodoClass <|.. TodoClass
iTag <|.. Tag

@enduml